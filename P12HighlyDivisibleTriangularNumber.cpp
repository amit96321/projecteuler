/*Problem: The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?

Author: Amit Kumar(kumaramit96321@gmail.com)

Method: First I am listling all the prime numbers below 100000 assuming that prime factor of 
triangle number will not exceed 100000
as N=p1^a1 * p2^a2 ....... here no of factor of N will be (a1+1)*(a2+1)*.......
also N=((n)*(n+1))/2, if n%2==0 number of factor of N will be factor(n/2)*factor(n+1)
else factor of N will be factor((n+1)/2)*factor(n)

*** one this is to be noticed that no of factor of (n)=2*factor(sqrt(n)) if n is not a perfect square
else factor(n)=2*factor(sqrt(n))-1 if n is a perfect square

*/

#include<bits/stdc++.h>
#define ll long long
using namespace std;

bool p[100000]; 

ll find(ll s){
    int cnt=1,factor;
    for(int i=2;i<100000;i++){
        if(i>s) break;
        factor=0;
        while(s%i==0){
            s/=i;
            factor++;
        }
        cnt*=(factor+1);
    }
    return cnt;
}

int main(){
    ll s=0,i,temp,j;
    memset(p,true,sizeof(p));
    p[0]=p[1]=false;
    for(i=4;i<100000;i+=2) p[i]=false;
    for(i=3;i<100000;i+=2){   //step is 2 because all even no has been marked false
        if(p[i]==true){
            for(j=i*i;j<100000;j+=(2*i)){   //starts with i*i  as multiple if i utpo (i-1)
                p[j]=false;                 //has been already marked
            }           //here step is 2*i as i*i is odd as i will be odd and after adding 
        }               //odd no i to it will become even which was already marked
    }
    for(i=1;;i++){
        if(i%2==0){
            if(find(i/2)*find(i+1)>500){
                cout<<(i*(i+1))/2;
                break;
            }
        }
        else {
            if(s=find(i)*find((i+1)/2)>500){
                cout<<(i*(i+1))/2;
                break;
            }
        }
    }
    return 0;
}
